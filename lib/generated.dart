import 'package:flutter/material.dart' as _i6;
import 'package:flutter/widgets.dart' as _i5;
import 'package:reflect_framework/core/action_method_info.dart' as _i4;
import 'package:reflect_framework/core/application_info.dart' as _i1;
import 'package:reflect_framework/core/service_class_info.dart' as _i2;
import 'package:reflect_framework/domain/action_method_parameter_factory_test.dart'
    as _i3;
import 'package:reflect_framework/domain/domain_objects.dart' as _i9;

import 'gui/action_method_parameter_processor_impl.dart' as _i8;
import 'gui/action_method_result_processor_impl.dart' as _i7;

/// This code is generated by [ApplicationInfoBuilder]
/// Do not modify or remove this code!
/// Regenerate it if needed using the following command: flutter packages pub run build_runner build lib --delete-conflicting-outputs
class ReflectApplicationInfo implements _i1.ApplicationInfo {
  @override
  String get name => 'My first app';

  @override
  String get description => '';

  @override
  String? get titleImage => 'assets/my_first_app.png';

  @override
  String get homePage =>
      'https://github.com/efficientyboosters/reflect_framework';
  @override
  String get documentation =>
      'https://github.com/efficientyboosters/reflect_framework/wiki';
  @override
  List<_i2.ServiceClassInfo> get serviceClassInfos => [
        ActionMethodParameterFactoryTestActionMethodParameterFactoryTestServiceInfo$(),
        DomainObjectsPersonServiceInfo$()
      ];
}

class ActionMethodParameterFactoryTestActionMethodParameterFactoryTestServiceInfo$
    extends _i2.ServiceClassInfo<_i3.ActionMethodParameterFactoryTestService> {
  @override
  final serviceObject = _i3.ActionMethodParameterFactoryTestService();
  @override
  String get name => 'Action method parameter factory tests';
  @override
  String get description => '';
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  List<_i4.ActionMethodInfo> get actionMethodInfos => [
        ActionMethodParameterFactoryTestServiceNoParameterInfo$(serviceObject),
        ActionMethodParameterFactoryTestServiceNoParameterFactoryInfo$(
            serviceObject),
        ActionMethodParameterFactoryTestServiceStringParameterFactoryAnnotationInfo$(
            serviceObject),
        ActionMethodParameterFactoryTestServiceBoolParameterFactoryAnnotationInfo$(
            serviceObject),
        ActionMethodParameterFactoryTestServiceIntParameterFactoryAnnotationInfo$(
            serviceObject),
        ActionMethodParameterFactoryTestServiceDoubleParameterFactoryAnnotationInfo$(
            serviceObject),
        ActionMethodParameterFactoryTestServiceDateTimeParameterFactoryAnnotationInfo$(
            serviceObject),
        ActionMethodParameterFactoryTestServiceListParameterFactoryAnnotationInfo$(
            serviceObject),
        ActionMethodParameterFactoryTestServiceSetParameterFactoryAnnotationInfo$(
            serviceObject),
        ActionMethodParameterFactoryTestServiceMapParameterFactoryAnnotationInfo$(
            serviceObject)
      ];
}

class ActionMethodParameterFactoryTestServiceNoParameterInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithoutParameter {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceNoParameterInfo$(this.methodOwner);
  @override
  String get name => 'No parameter';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    this.invokeMethodAndProcessResult(context);
  }

  @override
  void invokeMethodAndProcessResult(_i5.BuildContext context) {
    methodOwner.noParameter();
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class ActionMethodParameterFactoryTestServiceNoParameterFactoryInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithoutParameter {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceNoParameterFactoryInfo$(
      this.methodOwner);
  @override
  String get name => 'No parameter factory';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    this.invokeMethodAndProcessResult(context);
  }

  @override
  void invokeMethodAndProcessResult(_i5.BuildContext context) {
    methodOwner.noParameterFactory();
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class ActionMethodParameterFactoryTestServiceStringParameterFactoryAnnotationInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithParameter<String> {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceStringParameterFactoryAnnotationInfo$(
      this.methodOwner);
  @override
  String get name => 'String parameter factory annotation';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    String parameterValue = '';
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, String parameterValue) {
    methodOwner.stringParameterFactoryAnnotation(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class ActionMethodParameterFactoryTestServiceBoolParameterFactoryAnnotationInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithParameter<bool> {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceBoolParameterFactoryAnnotationInfo$(
      this.methodOwner);
  @override
  String get name => 'Bool parameter factory annotation';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    bool parameterValue = true;
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, bool parameterValue) {
    methodOwner.boolParameterFactoryAnnotation(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class ActionMethodParameterFactoryTestServiceIntParameterFactoryAnnotationInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithParameter<int> {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceIntParameterFactoryAnnotationInfo$(
      this.methodOwner);
  @override
  String get name => 'Int parameter factory annotation';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    int parameterValue = 0;
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, int parameterValue) {
    methodOwner.intParameterFactoryAnnotation(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class ActionMethodParameterFactoryTestServiceDoubleParameterFactoryAnnotationInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithParameter<double> {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceDoubleParameterFactoryAnnotationInfo$(
      this.methodOwner);
  @override
  String get name => 'Double parameter factory annotation';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    double parameterValue = 0.0;
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, double parameterValue) {
    methodOwner.doubleParameterFactoryAnnotation(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class ActionMethodParameterFactoryTestServiceDateTimeParameterFactoryAnnotationInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithParameter<DateTime> {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceDateTimeParameterFactoryAnnotationInfo$(
      this.methodOwner);
  @override
  String get name => 'Date time parameter factory annotation';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    DateTime parameterValue = DateTime.now();
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, DateTime parameterValue) {
    methodOwner.dateTimeParameterFactoryAnnotation(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class ActionMethodParameterFactoryTestServiceListParameterFactoryAnnotationInfo$
    implements
        _i4.StartWithoutParameter,
        _i4.InvokeWithParameter<List<dynamic>> {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceListParameterFactoryAnnotationInfo$(
      this.methodOwner);
  @override
  String get name => 'List parameter factory annotation';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    List<dynamic> parameterValue = [];
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, List<dynamic> parameterValue) {
    methodOwner.listParameterFactoryAnnotation(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class ActionMethodParameterFactoryTestServiceSetParameterFactoryAnnotationInfo$
    implements
        _i4.StartWithoutParameter,
        _i4.InvokeWithParameter<Set<dynamic>> {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceSetParameterFactoryAnnotationInfo$(
      this.methodOwner);
  @override
  String get name => 'Set parameter factory annotation';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    Set<dynamic> parameterValue = {};
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, Set<dynamic> parameterValue) {
    methodOwner.setParameterFactoryAnnotation(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class ActionMethodParameterFactoryTestServiceMapParameterFactoryAnnotationInfo$
    implements
        _i4.StartWithoutParameter,
        _i4.InvokeWithParameter<Map<dynamic, dynamic>> {
  @override
  final _i3.ActionMethodParameterFactoryTestService methodOwner;
  ActionMethodParameterFactoryTestServiceMapParameterFactoryAnnotationInfo$(
      this.methodOwner);
  @override
  String get name => 'Map parameter factory annotation';
  @override
  String get description => '';
  @override
  _i5.IconData get icon => _i6.Icons.lens;
  @override
  bool get visible => true;
  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    Map<dynamic, dynamic> parameterValue = {};
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, Map<dynamic, dynamic> parameterValue) {
    methodOwner.mapParameterFactoryAnnotation(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class DomainObjectsPersonServiceInfo$
    extends _i2.ServiceClassInfo<_i9.PersonService> {
  @override
  final serviceObject = _i9.PersonService();

  @override
  String get name => 'People';

  @override
  String get description => '';

  @override
  bool get visible => true;

  @override
  double get order => 100.0;

  @override
  List<_i4.ActionMethodInfo> get actionMethodInfos => [
        PersonServiceAllPersonsInfo$(serviceObject),
        PersonServiceFindPersonsInfo$(serviceObject),
        PersonServiceEditInfo$(serviceObject),
        PersonServiceRemoveInfo$(serviceObject),
        PersonServiceAddNewInfo$(serviceObject),
        PersonServiceSendEmailInfo$(serviceObject),
        PersonServiceLogoutInfo$(serviceObject)
      ];
}

class PersonServiceAllPersonsInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithoutParameter {
  @override
  final _i9.PersonService methodOwner;

  PersonServiceAllPersonsInfo$(this.methodOwner);

  @override
  String get name => 'All persons';

  @override
  String get description => '';

  @override
  _i5.IconData get icon => _i6.Icons.table_chart_sharp;

  @override
  bool get visible => true;

  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    this.invokeMethodAndProcessResult(context);
  }

  @override
  void invokeMethodAndProcessResult(_i5.BuildContext context) {
    List<_i9.Person> returnValue = methodOwner.allPersons();
    _i7.showListInTableTab(context, this, returnValue);
  }
}

class PersonServiceFindPersonsInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithParameter<String> {
  @override
  final _i9.PersonService methodOwner;

  PersonServiceFindPersonsInfo$(this.methodOwner);

  @override
  String get name => 'Find persons';

  @override
  String get description => '';

  @override
  _i5.IconData get icon => _i6.Icons.table_chart_sharp;

  @override
  bool get visible => true;

  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    String parameterValue = '';
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, String parameterValue) {
    List<_i9.Person> returnValue = methodOwner.findPersons(parameterValue);
    _i7.showListInTableTab(context, this, returnValue);
  }
}

class PersonServiceEditInfo$
    implements
        _i4.StartWithParameter<_i9.Person>,
        _i4.InvokeWithParameter<_i9.Person> {
  @override
  final _i9.PersonService methodOwner;

  PersonServiceEditInfo$(this.methodOwner);

  @override
  String get name => 'Edit';

  @override
  String get description => '';

  @override
  _i5.IconData get icon => _i6.Icons.lens;

  @override
  bool get visible => true;

  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context, Object parameterValue) {
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, _i9.Person parameterValue) {
    methodOwner.edit(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class PersonServiceRemoveInfo$
    implements
        _i4.StartWithParameter<_i9.Person>,
        _i4.InvokeWithParameter<_i9.Person> {
  @override
  final _i9.PersonService methodOwner;

  PersonServiceRemoveInfo$(this.methodOwner);

  @override
  String get name => 'Remove';

  @override
  String get description => '';

  @override
  _i5.IconData get icon => _i6.Icons.lens;

  @override
  bool get visible => true;

  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context, Object parameterValue) {
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, _i9.Person parameterValue) {
    methodOwner.remove(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class PersonServiceAddNewInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithParameter<_i9.Person> {
  @override
  final _i9.PersonService methodOwner;

  PersonServiceAddNewInfo$(this.methodOwner);

  @override
  String get name => 'Add new';

  @override
  String get description => '';

  @override
  _i5.IconData get icon => _i6.Icons.table_rows_sharp;

  @override
  bool get visible => true;

  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    _i9.Person parameterValue = _i9.Person();
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, _i9.Person parameterValue) {
    methodOwner.addNew(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class PersonServiceSendEmailInfo$
    implements
        _i4.StartWithParameter<_i9.Person>,
        _i4.InvokeWithParameter<_i9.Person> {
  @override
  final _i9.PersonService methodOwner;

  PersonServiceSendEmailInfo$(this.methodOwner);

  @override
  String get name => 'Send email';

  @override
  String get description => '';

  @override
  _i5.IconData get icon => _i6.Icons.lens;

  @override
  bool get visible => true;

  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context, Object parameterValue) {
    _i8.editDomainObjectParameterInForm(context, this, parameterValue);
  }

  @override
  void invokeMethodAndProcessResult(
      _i5.BuildContext context, _i9.Person parameterValue) {
    methodOwner.sendEmail(parameterValue);
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}

class PersonServiceLogoutInfo$
    implements _i4.StartWithoutParameter, _i4.InvokeWithoutParameter {
  @override
  final _i9.PersonService methodOwner;

  PersonServiceLogoutInfo$(this.methodOwner);

  @override
  String get name => 'Logout';

  @override
  String get description => '';

  @override
  _i5.IconData get icon => _i6.Icons.lens;

  @override
  bool get visible => true;

  @override
  double get order => 100.0;
  @override
  void start(_i5.BuildContext context) {
    this.invokeMethodAndProcessResult(context);
  }

  @override
  void invokeMethodAndProcessResult(_i5.BuildContext context) {
    methodOwner.logout();
    _i7.showMethodExecutedSnackBarForMethodsReturningVoid(context, this);
  }
}
